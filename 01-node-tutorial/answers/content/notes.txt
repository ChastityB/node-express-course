Globals - No window
 __dirname - path to current directory
 __filename - file name
 require - function to use modules (CommonJS)
 module - info about current module (file)
 process - info about nev where the program is being executed

npm - global command, comes with node
npm --version
 local dependency - use it only in this particular project
npm i <packageName>
global dependency - use it in any project
npm install -g <packageName>
sudo npm install -g <packageName> (mac)

package.json - manifest file (stores important info about project/package)
manual approach (create package.json in the root, create properties, etc)
npm init (step by step, press enter to skip)
npm init -y (everything default)

nodemon might not work due to this folder having multiple package.json files. To fix the possible error, update the location to the path where nodemon is located
    so "dev":"./node_modules/.bin/nodemon app.js"

const _ = require("lodash");
const items = [1, [2, [3, [4]]]];
const newItems = _.flattenDeep(items);
console.log(newItems);

// //remember this is synchronous.
// const { readFile } = require("fs");
// console.log("started a first task");
// //check the file path to ensure correctness
// readFile("./content/first.txt", "utf-8", (err, result) => {
//   if (err) {
//     console.log(err);
//     return;
//   }
//   console.log(result);
//   console.log("completed first task");
// });
// console.log("starting next task");

// //started operating system process
// console.log("first");
// setTimeout(() => {
//   console.log("second");
// }, 0);
// console.log("I will run first");

// //process stays alive unless we stop it with control+c
// setInterval(() => {
//   console.log("Hello World");
// }, 2000);
// console.log("I will run first");

// const http = require("http");
// const server = http.createServer((req, res) => {
//   console.log("request event");
//   res.end("Hello World");
// });
// //listen is asynchronous
// server.listen(5000, () => {
//   console.log("Server listening on port:5000....");
// });

last buffer - remainder
highWaterMark - control size